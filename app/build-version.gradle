apply plugin: 'com.android.application'

import java.text.SimpleDateFormat

ext {
    versionFile = new File(project.rootDir, 'build-version.properties')
    calculateVersionName = {
        def version = readVersion()
        return "${version['major']}.${version['minor']}.${version['patch']}.${version['build']}"
    }

    calculateVersionCode = {
        def version = readVersion()
        def major = version['major'] as int // 1..âˆž
        def minor = version['minor'] as int // 0..99
        def patch = version['patch'] as int // 0..999
        def build = version['build'] as int // 0..9999
        def vCode = (10000000*major) + (100000*minor) + (10000*patch) + build as int
        return vCode
    }
    
    getKickoff = {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
        String now = dateFormat.format(System.currentTimeMillis());
        println("Kickoff: "+now);
	    return(now);
    }

    getEnv =  {
        if (System.env.environment == null) {
            return System.getenv("USER");
        } else {}
       return System.env.environment;
    }
}

Properties readVersion() {
    def version = new Properties()
    def stream
    try {
        stream = new FileInputStream(versionFile)
        version.load(stream)
    } catch (FileNotFoundException ignore) {
    } finally {
        if (stream != null) stream.close()
    }
    // safety defaults in case file is missing
    if(!version['currentName']) version['currentName'] = "undef"
    if(!version['currentCode']) version['currentCode'] = "undef"
    if(!version['major']) version['major'] = "4"
    if(!version['minor']) version['minor'] = "2"
    if(!version['patch']) version['patch'] = "0"
    if(!version['build']) version['build'] = "0"
    return version
}
